{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Sosuke\\\\Desktop\\\\New folder\\\\server\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Sosuke\\\\Desktop\\\\New folder\\\\server\",\"filename\":\"C:\\\\Users\\\\Sosuke\\\\Desktop\\\\New folder\\\\server\\\\app.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Sosuke\\\\Desktop\\\\New folder\\\\server\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.21.4:development":{"value":{"code":"// const express =require('express');\nimport express from \"express\";\nimport mongoose from \"mongoose\";\nimport * as dotenv from 'dotenv';\nimport morgan from \"morgan\";\nimport cookieParser from \"cookie-parser\";\nimport cors from \"cors\";\nimport csurf from \"csurf\";\nimport { readdirSync } from \"fs\";\nimport adminroute from './routes/admin.js';\n\n//const articles = require(\"./routes/article.routes\");\nconst routeFiles = ['admin', 'auth'];\ndotenv.config();\n//express appp\nconst app = express();\nconst csrfProtect = csurf({\n  cookie: true\n});\n\n// app setup\n\napp.use(morgan(\"dev\"));\napp.use(cors());\napp.use(express.json({\n  limit: \"5mb\"\n}));\napp.use(cookieParser());\napp.use(csrfProtect);\n\n// app.use(\"/api/admin\",adminroute)\n\napp.use((req, res, next) => {\n  console.log(\"this is my middle war\");\n  next();\n});\nconst getCSRF = (req, res) => {\n  res.json({\n    csrfToken: req.csrfToken()\n  });\n};\napp.get(\"/api-get-csrf-token\", getCSRF);\nPromise.all(routeFiles.map(routeFile => import(`./routes/${routeFile}.js`))).then(routes => {\n  // Use routes\n  routes.forEach((route, index) => {\n    console.log(routeFiles[(index, \"routeFilesrouteFiles\")]);\n    app.use(`/api/${routeFiles[index]}`, route.default);\n  });\n}).catch(error => {\n  console.error(error);\n});\n\n// readdirSync(\"./routes\").map((file)=>{\n//   console.log(file)\n//   return app.use(\"/api\",require(`./routes/${file}`))\n// })\n\n//database\nmongoose.connect(process.env.DATABASE).then(() => {\n  console.log(\"Database connected successfully\");\n}).catch(err => {\n  console.log(\"Database error\", err);\n});\nconst PORT = process.env.PORT || 5000;\napp.listen(PORT);\nconsole.log(\"your server is runngin in \", PORT);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwibW9uZ29vc2UiLCJkb3RlbnYiLCJtb3JnYW4iLCJjb29raWVQYXJzZXIiLCJjb3JzIiwiY3N1cmYiLCJyZWFkZGlyU3luYyIsImFkbWlucm91dGUiLCJyb3V0ZUZpbGVzIiwiY29uZmlnIiwiYXBwIiwiY3NyZlByb3RlY3QiLCJjb29raWUiLCJ1c2UiLCJqc29uIiwibGltaXQiLCJyZXEiLCJyZXMiLCJuZXh0IiwiY29uc29sZSIsImxvZyIsImdldENTUkYiLCJjc3JmVG9rZW4iLCJnZXQiLCJQcm9taXNlIiwiYWxsIiwibWFwIiwicm91dGVGaWxlIiwidGhlbiIsInJvdXRlcyIsImZvckVhY2giLCJyb3V0ZSIsImluZGV4IiwiZGVmYXVsdCIsImNhdGNoIiwiZXJyb3IiLCJjb25uZWN0IiwicHJvY2VzcyIsImVudiIsIkRBVEFCQVNFIiwiZXJyIiwiUE9SVCIsImxpc3RlbiJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxTb3N1a2VcXERlc2t0b3BcXE5ldyBmb2xkZXJcXHNlcnZlclxcIiwic291cmNlcyI6WyJhcHAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gY29uc3QgZXhwcmVzcyA9cmVxdWlyZSgnZXhwcmVzcycpO1xyXG5pbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiXHJcbmltcG9ydCBtb25nb29zZSBmcm9tIFwibW9uZ29vc2VcIjtcclxuaW1wb3J0ICogYXMgZG90ZW52IGZyb20gJ2RvdGVudidcclxuaW1wb3J0IG1vcmdhbiBmcm9tIFwibW9yZ2FuXCI7XHJcbmltcG9ydCBjb29raWVQYXJzZXIgZnJvbSBcImNvb2tpZS1wYXJzZXJcIjtcclxuaW1wb3J0IGNvcnMgZnJvbSBcImNvcnNcIlxyXG5pbXBvcnQgY3N1cmYgZnJvbSBcImNzdXJmXCI7XHJcbmltcG9ydCB7cmVhZGRpclN5bmN9IGZyb20gXCJmc1wiXHJcbmltcG9ydCBhZG1pbnJvdXRlICBmcm9tICcuL3JvdXRlcy9hZG1pbi5qcyc7XHJcblxyXG4vL2NvbnN0IGFydGljbGVzID0gcmVxdWlyZShcIi4vcm91dGVzL2FydGljbGUucm91dGVzXCIpO1xyXG5jb25zdCByb3V0ZUZpbGVzID0gWydhZG1pbicsICdhdXRoJ107XHJcblxyXG5kb3RlbnYuY29uZmlnKClcclxuLy9leHByZXNzIGFwcHBcclxuY29uc3QgYXBwPWV4cHJlc3MoKTtcclxuY29uc3QgY3NyZlByb3RlY3QgPSBjc3VyZih7IGNvb2tpZTogdHJ1ZSB9KVxyXG5cclxuLy8gYXBwIHNldHVwXHJcblxyXG5hcHAudXNlKG1vcmdhbihcImRldlwiKSlcclxuYXBwLnVzZShjb3JzKCkpXHJcbmFwcC51c2UoZXhwcmVzcy5qc29uKHtsaW1pdDpcIjVtYlwifSkpXHJcbmFwcC51c2UoY29va2llUGFyc2VyKCkpXHJcbmFwcC51c2UoY3NyZlByb3RlY3QpXHJcblxyXG4vLyBhcHAudXNlKFwiL2FwaS9hZG1pblwiLGFkbWlucm91dGUpXHJcblxyXG5hcHAudXNlKChyZXEscmVzLG5leHQpPT57XHJcbiAgY29uc29sZS5sb2coXCJ0aGlzIGlzIG15IG1pZGRsZSB3YXJcIilcclxuICBuZXh0KClcclxufSlcclxuXHJcbmNvbnN0IGdldENTUkY9KHJlcSxyZXMpPT57XHJcbnJlcy5qc29uKHtjc3JmVG9rZW46cmVxLmNzcmZUb2tlbigpfSlcclxufVxyXG5cclxuYXBwLmdldChcIi9hcGktZ2V0LWNzcmYtdG9rZW5cIixnZXRDU1JGKVxyXG5cclxuUHJvbWlzZS5hbGwoXHJcbiAgcm91dGVGaWxlcy5tYXAocm91dGVGaWxlID0+IGltcG9ydChgLi9yb3V0ZXMvJHtyb3V0ZUZpbGV9LmpzYCkpXHJcbilcclxuICAudGhlbihyb3V0ZXMgPT4ge1xyXG4gICAgLy8gVXNlIHJvdXRlc1xyXG4gICAgcm91dGVzLmZvckVhY2goKHJvdXRlLCBpbmRleCkgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhyb3V0ZUZpbGVzW2luZGV4LFwicm91dGVGaWxlc3JvdXRlRmlsZXNcIl0pXHJcbiAgICAgIGFwcC51c2UoYC9hcGkvJHtyb3V0ZUZpbGVzW2luZGV4XX1gLCByb3V0ZS5kZWZhdWx0KTtcclxuICAgIH0pO1xyXG4gIH0pXHJcbiAgLmNhdGNoKGVycm9yID0+IHtcclxuICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xyXG4gIH0pO1xyXG5cclxuLy8gcmVhZGRpclN5bmMoXCIuL3JvdXRlc1wiKS5tYXAoKGZpbGUpPT57XHJcbi8vICAgY29uc29sZS5sb2coZmlsZSlcclxuLy8gICByZXR1cm4gYXBwLnVzZShcIi9hcGlcIixyZXF1aXJlKGAuL3JvdXRlcy8ke2ZpbGV9YCkpXHJcbi8vIH0pXHJcblxyXG4vL2RhdGFiYXNlXHJcbm1vbmdvb3NlLmNvbm5lY3QocHJvY2Vzcy5lbnYuREFUQUJBU0UpLnRoZW4gKCgpPT57XHJcbmNvbnNvbGUubG9nKFwiRGF0YWJhc2UgY29ubmVjdGVkIHN1Y2Nlc3NmdWxseVwiKVxyXG59KVxyXG4uY2F0Y2goKGVycik9PntcclxuICBjb25zb2xlLmxvZyhcIkRhdGFiYXNlIGVycm9yXCIsZXJyKVxyXG59KVxyXG5cclxuXHJcblxyXG5jb25zdCBQT1JUID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA1MDAwO1xyXG5cclxuYXBwLmxpc3RlbihQT1JUKTtcclxuXHJcbmNvbnNvbGUubG9nKFwieW91ciBzZXJ2ZXIgaXMgcnVubmdpbiBpbiBcIixQT1JUKSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxPQUFPQSxPQUFPLE1BQU0sU0FBUztBQUM3QixPQUFPQyxRQUFRLE1BQU0sVUFBVTtBQUMvQixPQUFPLEtBQUtDLE1BQU0sTUFBTSxRQUFRO0FBQ2hDLE9BQU9DLE1BQU0sTUFBTSxRQUFRO0FBQzNCLE9BQU9DLFlBQVksTUFBTSxlQUFlO0FBQ3hDLE9BQU9DLElBQUksTUFBTSxNQUFNO0FBQ3ZCLE9BQU9DLEtBQUssTUFBTSxPQUFPO0FBQ3pCLFNBQVFDLFdBQVcsUUFBTyxJQUFJO0FBQzlCLE9BQU9DLFVBQVUsTUFBTyxtQkFBbUI7O0FBRTNDO0FBQ0EsTUFBTUMsVUFBVSxHQUFH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","map":{"version":3,"names":["express","mongoose","dotenv","morgan","cookieParser","cors","csurf","readdirSync","adminroute","routeFiles","config","app","csrfProtect","cookie","use","json","limit","req","res","next","console","log","getCSRF","csrfToken","get","Promise","all","map","routeFile","then","routes","forEach","route","index","default","catch","error","connect","process","env","DATABASE","err","PORT","listen"],"sourceRoot":"C:\\Users\\Sosuke\\Desktop\\New folder\\server\\","sources":["app.js"],"sourcesContent":["// const express =require('express');\r\nimport express from \"express\"\r\nimport mongoose from \"mongoose\";\r\nimport * as dotenv from 'dotenv'\r\nimport morgan from \"morgan\";\r\nimport cookieParser from \"cookie-parser\";\r\nimport cors from \"cors\"\r\nimport csurf from \"csurf\";\r\nimport {readdirSync} from \"fs\"\r\nimport adminroute  from './routes/admin.js';\r\n\r\n//const articles = require(\"./routes/article.routes\");\r\nconst routeFiles = ['admin', 'auth'];\r\n\r\ndotenv.config()\r\n//express appp\r\nconst app=express();\r\nconst csrfProtect = csurf({ cookie: true })\r\n\r\n// app setup\r\n\r\napp.use(morgan(\"dev\"))\r\napp.use(cors())\r\napp.use(express.json({limit:\"5mb\"}))\r\napp.use(cookieParser())\r\napp.use(csrfProtect)\r\n\r\n// app.use(\"/api/admin\",adminroute)\r\n\r\napp.use((req,res,next)=>{\r\n  console.log(\"this is my middle war\")\r\n  next()\r\n})\r\n\r\nconst getCSRF=(req,res)=>{\r\nres.json({csrfToken:req.csrfToken()})\r\n}\r\n\r\napp.get(\"/api-get-csrf-token\",getCSRF)\r\n\r\nPromise.all(\r\n  routeFiles.map(routeFile => import(`./routes/${routeFile}.js`))\r\n)\r\n  .then(routes => {\r\n    // Use routes\r\n    routes.forEach((route, index) => {\r\n      console.log(routeFiles[index,\"routeFilesrouteFiles\"])\r\n      app.use(`/api/${routeFiles[index]}`, route.default);\r\n    });\r\n  })\r\n  .catch(error => {\r\n    console.error(error);\r\n  });\r\n\r\n// readdirSync(\"./routes\").map((file)=>{\r\n//   console.log(file)\r\n//   return app.use(\"/api\",require(`./routes/${file}`))\r\n// })\r\n\r\n//database\r\nmongoose.connect(process.env.DATABASE).then (()=>{\r\nconsole.log(\"Database connected successfully\")\r\n})\r\n.catch((err)=>{\r\n  console.log(\"Database error\",err)\r\n})\r\n\r\n\r\n\r\nconst PORT = process.env.PORT || 5000;\r\n\r\napp.listen(PORT);\r\n\r\nconsole.log(\"your server is runngin in \",PORT)"],"mappings":"AAAA;AACA,OAAOA,OAAO,MAAM,SAAS;AAC7B,OAAOC,QAAQ,MAAM,UAAU;AAC/B,OAAO,KAAKC,MAAM,MAAM,QAAQ;AAChC,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAOC,YAAY,MAAM,eAAe;AACxC,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,WAAW,QAAO,IAAI;AAC9B,OAAOC,UAAU,MAAO,mBAAmB;;AAE3C;AACA,MAAMC,UAAU,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC;AAEpCP,MAAM,CAACQ,MAAM,EAAE;AACf;AACA,MAAMC,GAAG,GAACX,OAAO,EAAE;AACnB,MAAMY,WAAW,GAAGN,KAAK,CAAC;EAAEO,MAAM,EAAE;AAAK,CAAC,CAAC;;AAE3C;;AAEAF,GAAG,CAACG,GAAG,CAACX,MAAM,CAAC,KAAK,CAAC,CAAC;AACtBQ,GAAG,CAACG,GAAG,CAACT,IAAI,EAAE,CAAC;AACfM,GAAG,CAACG,GAAG,CAACd,OAAO,CAACe,IAAI,CAAC;EAACC,KAAK,EAAC;AAAK,CAAC,CAAC,CAAC;AACpCL,GAAG,CAACG,GAAG,CAACV,YAAY,EAAE,CAAC;AACvBO,GAAG,CAACG,GAAG,CAACF,WAAW,CAAC;;AAEpB;;AAEAD,GAAG,CAACG,GAAG,CAAC,CAACG,GAAG,EAACC,GAAG,EAACC,IAAI,KAAG;EACtBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACpCF,IAAI,EAAE;AACR,CAAC,CAAC;AAEF,MAAMG,OAAO,GAACA,CAACL,GAAG,EAACC,GAAG,KAAG;EACzBA,GAAG,CAACH,IAAI,CAAC;IAACQ,SAAS,EAACN,GAAG,CAACM,SAAS;EAAE,CAAC,CAAC;AACrC,CAAC;AAEDZ,GAAG,CAACa,GAAG,CAAC,qBAAqB,EAACF,OAAO,CAAC;AAEtCG,OAAO,CAACC,GAAG,CACTjB,UAAU,CAACkB,GAAG,CAACC,SAAS,IAAI,MAAM,CAAE,YAAWA,SAAU,KAAI,CAAC,CAAC,CAChE,CACEC,IAAI,CAACC,MAAM,IAAI;EACd;EACAA,MAAM,CAACC,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;IAC/Bb,OAAO,CAACC,GAAG,CAACZ,UAAU,EAACwB,KAAK,EAAC,sBAAsB,EAAC,CAAC;IACrDtB,GAAG,CAACG,GAAG,CAAE,QAAOL,UAAU,CAACwB,KAAK,CAAE,EAAC,EAAED,KAAK,CAACE,OAAO,CAAC;EACrD,CAAC,CAAC;AACJ,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;EACdhB,OAAO,CAACgB,KAAK,CAACA,KAAK,CAAC;AACtB,CAAC,CAAC;;AAEJ;AACA;AACA;AACA;;AAEA;AACAnC,QAAQ,CAACoC,OAAO,CAACC,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC,CAACX,IAAI,CAAE,MAAI;EACjDT,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;AAC9C,CAAC,CAAC,CACDc,KAAK,CAAEM,GAAG,IAAG;EACZrB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAACoB,GAAG,CAAC;AACnC,CAAC,CAAC;AAIF,MAAMC,IAAI,GAAGJ,OAAO,CAACC,GAAG,CAACG,IAAI,IAAI,IAAI;AAErC/B,GAAG,CAACgC,MAAM,CAACD,IAAI,CAAC;AAEhBtB,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAACqB,IAAI,CAAC"}},"mtime":1682176482848},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Sosuke\\\\Desktop\\\\New folder\\\\server\\\\database\\\\model\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Sosuke\\\\Desktop\\\\New folder\\\\server\",\"filename\":\"C:\\\\Users\\\\Sosuke\\\\Desktop\\\\New folder\\\\server\\\\database\\\\model\\\\index.cjs\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Sosuke\\\\Desktop\\\\New folder\\\\server\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.21.4:development":{"value":{"code":"import fs from 'fs';\nimport path from 'path';\nimport Sequelize from 'sequelize';\nimport enVariables from '../config/config.json';\nimport { fileURLToPath } from 'url';\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\nconst config = enVariables[env];\nconst db = {};\nlet sequelize;\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\nconsole.log(__dirname);\nfs.readdirSync(__dirname).filter(file => file.indexOf('.') !== 0 && file !== basename && file.slice(-3) === '.js').forEach(file => {\n  // eslint-disable-next-line global-require,import/no-dynamic-require\n  const model = require(path.join(__dirname, file)).default(sequelize, Sequelize.DataTypes);\n  db[model.name] = model;\n});\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\nsequelize.authenticate().then(_ => console.log('Connected to Postgres'));\nexport default db;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJmcyIsInBhdGgiLCJTZXF1ZWxpemUiLCJlblZhcmlhYmxlcyIsImZpbGVVUkxUb1BhdGgiLCJfX2ZpbGVuYW1lIiwiaW1wb3J0IiwibWV0YSIsInVybCIsIl9fZGlybmFtZSIsImRpcm5hbWUiLCJiYXNlbmFtZSIsImVudiIsInByb2Nlc3MiLCJOT0RFX0VOViIsImNvbmZpZyIsImRiIiwic2VxdWVsaXplIiwidXNlX2Vudl92YXJpYWJsZSIsImRhdGFiYXNlIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsImNvbnNvbGUiLCJsb2ciLCJyZWFkZGlyU3luYyIsImZpbHRlciIsImZpbGUiLCJpbmRleE9mIiwic2xpY2UiLCJmb3JFYWNoIiwibW9kZWwiLCJyZXF1aXJlIiwiam9pbiIsImRlZmF1bHQiLCJEYXRhVHlwZXMiLCJuYW1lIiwiT2JqZWN0Iiwia2V5cyIsIm1vZGVsTmFtZSIsImFzc29jaWF0ZSIsImF1dGhlbnRpY2F0ZSIsInRoZW4iLCJfIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFNvc3VrZVxcRGVza3RvcFxcTmV3IGZvbGRlclxcc2VydmVyXFxkYXRhYmFzZVxcbW9kZWxcXCIsInNvdXJjZXMiOlsiaW5kZXguY2pzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmcyBmcm9tICdmcyc7XHJcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xyXG5pbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7XHJcbmltcG9ydCBlblZhcmlhYmxlcyBmcm9tICcuLi9jb25maWcvY29uZmlnLmpzb24nO1xyXG5cclxuaW1wb3J0IHtmaWxlVVJMVG9QYXRofSBmcm9tICd1cmwnO1xyXG5jb25zdCBfX2ZpbGVuYW1lID0gZmlsZVVSTFRvUGF0aChpbXBvcnQubWV0YS51cmwpO1xyXG5jb25zdCBfX2Rpcm5hbWUgPSBwYXRoLmRpcm5hbWUoX19maWxlbmFtZSk7XHJcblxyXG5jb25zdCBiYXNlbmFtZSA9IHBhdGguYmFzZW5hbWUoX19maWxlbmFtZSk7XHJcbmNvbnN0IGVudiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WIHx8ICdkZXZlbG9wbWVudCc7XHJcbmNvbnN0IGNvbmZpZyA9IGVuVmFyaWFibGVzW2Vudl07XHJcbmNvbnN0IGRiID0ge307XHJcblxyXG5sZXQgc2VxdWVsaXplO1xyXG5pZiAoY29uZmlnLnVzZV9lbnZfdmFyaWFibGUpIHtcclxuICBzZXF1ZWxpemUgPSBuZXcgU2VxdWVsaXplKHByb2Nlc3MuZW52W2NvbmZpZy51c2VfZW52X3ZhcmlhYmxlXSwgY29uZmlnKTtcclxufSBlbHNlIHtcclxuICBzZXF1ZWxpemUgPSBuZXcgU2VxdWVsaXplKGNvbmZpZy5kYXRhYmFzZSwgY29uZmlnLnVzZXJuYW1lLCBjb25maWcucGFzc3dvcmQsIGNvbmZpZyk7XHJcbn1cclxuY29uc29sZS5sb2coX19kaXJuYW1lKVxyXG5cclxuZnNcclxuICAucmVhZGRpclN5bmMoX19kaXJuYW1lKVxyXG4gIC5maWx0ZXIoZmlsZSA9PiAoZmlsZS5pbmRleE9mKCcuJykgIT09IDApICYmIChmaWxlICE9PSBiYXNlbmFtZSkgJiYgKGZpbGUuc2xpY2UoLTMpID09PSAnLmpzJykpXHJcbiAgLmZvckVhY2goZmlsZSA9PiB7XHJcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZ2xvYmFsLXJlcXVpcmUsaW1wb3J0L25vLWR5bmFtaWMtcmVxdWlyZVxyXG4gICAgY29uc3QgbW9kZWwgPSByZXF1aXJlKHBhdGguam9pbihfX2Rpcm5hbWUsIGZpbGUpKS5kZWZhdWx0KHNlcXVlbGl6ZSwgU2VxdWVsaXplLkRhdGFUeXBlcyk7XHJcbiAgICBkYlttb2RlbC5uYW1lXSA9IG1vZGVsO1xyXG4gIH0pO1xyXG5cclxuT2JqZWN0LmtleXMoZGIpLmZvckVhY2gobW9kZWxOYW1lID0+IHtcclxuICBpZiAoZGJbbW9kZWxOYW1lXS5hc3NvY2lhdGUpIHtcclxuICAgIGRiW21vZGVsTmFtZV0uYXNzb2NpYXRlKGRiKTtcclxuICB9XHJcbn0pO1xyXG5cclxuZGIuc2VxdWVsaXplID0gc2VxdWVsaXplO1xyXG5kYi5TZXF1ZWxpemUgPSBTZXF1ZWxpemU7XHJcbnNlcXVlbGl6ZS5hdXRoZW50aWNhdGUoKS50aGVuKF89PmNvbnNvbGUubG9nKCdDb25uZWN0ZWQgdG8gUG9zdGdyZXMnKSlcclxuZXhwb3J0IGRlZmF1bHQgZGI7Il0sIm1hcHBpbmdzIjoiQUFBQSxPQUFPQSxFQUFFLE1BQU0sSUFBSTtBQUNuQixPQUFPQyxJQUFJLE1BQU0sTUFBTTtBQUN2QixPQUFPQyxTQUFTLE1BQU0sV0FBVztBQUNqQyxPQUFPQyxXQUFXLE1BQU0sdUJBQXVCO0FBRS9DLFNBQVFDLGFBQWEsUUFBTyxLQUFLO0FBQ2pDLE1BQU1DLFVBQVUsR0FBR0QsYUFBYSxDQUFDRSxNQUFNLENBQUNDLElBQUksQ0FBQ0MsR0FBRyxDQUFDO0FBQ2pELE1BQU1DLFNBQVMsR0FBR1IsSUFBSSxDQUFDUyxPQUFPLENBQUNMLFVBQVUsQ0FBQztBQUUxQyxNQUFNTSxRQUFRLEdBQUdWLElBQUksQ0FBQ1UsUUFBUSxDQUFDTixVQUFVLENBQUM7QUFDMUMsTUFBTU8sR0FBRyxHQUFHQyxPQUFPLENBQUNELEdBQUcsQ0FBQ0UsUUFBUSxJQUFJLGFBQWE7QUFDakQsTUFBTUMsTUFBTSxHQUFHWixXQUFXLENBQUNTLEdBQUcsQ0FBQztBQUMvQixNQUFNSSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBRWIsSUFBSUMsU0FBUztBQUNiLElBQUlGLE1BQU0sQ0FBQ0csZ0JBQWdCLEVBQUU7RUFDM0JELFNBQVMsR0FBRyxJQUFJZixTQUFTLENBQUNXLE9BQU8sQ0FBQ0QsR0FBRyxDQUFDRyxNQUFNLENBQUNHLGdCQUFnQixDQUFDLEVBQUVILE1BQU0sQ0FBQztBQUN6RSxDQUFDLE1BQU07RUFDTEUsU0FBUyxHQUFHLElBQUlmLFNBQVMsQ0FBQ2EsTUFBTSxDQUFDSSxRQUFRLEVBQUVKLE1BQU0sQ0FBQ0ssUUFBUSxFQUFFTCxNQUFNLENBQUNNLFFBQVEsRUFBRU4sTUFBTSxDQUFDO0FBQ3RGO0FBQ0FPLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDZCxTQUFTLENBQUM7QUFFdEJULEVBQUUsQ0FDQ3dCLFdBQVcsQ0FBQ2YsU0FBUyxDQUFDLENBQ3RCZ0IsTUFBTSxDQUFDQyxJQUFJLElBQUtBLElBQUksQ0FBQ0MsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsSUFBTUQsSUFBSSxLQUFLZixRQUFTLElBQUtlLElBQUksQ0FBQ0UsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssS0FBTSxDQUFDLENBQzlGQyxPQUFPLENBQUNILElBQUksSUFBSTtFQUNmO0VBQ0EsTUFBTUksS0FBSyxHQUFHQyxPQUFPLENBQUM5QixJQUFJLENBQUMrQixJQUFJLENBQUN2QixTQUFTLEVBQUVpQixJQUFJLENBQUMsQ0FBQyxDQUFDTyxPQUFPLENBQUNoQixTQUFTLEVBQUVmLFNBQVMsQ0FBQ2dDLFNBQVMsQ0FBQztFQUN6RmxCLEVBQUUsQ0FBQ2MsS0FBSyxDQUFDSyxJQUFJLENBQUMsR0FBR0wsS0FBSztBQUN4QixDQUFDLENBQUM7QUFFSk0sTUFBTSxDQUFDQyxJQUFJLENBQUNyQixFQUFFLENBQUMsQ0FBQ2EsT0FBTyxDQUFDUyxTQUFTLElBQUk7RUFDbkMsSUFBSXRCLEVBQUUsQ0FBQ3NCLFNBQVMsQ0FBQyxDQUFDQyxTQUFTLEVBQUU7SUFDM0J2QixFQUFFLENBQUNzQixTQUFTLENBQUMsQ0FBQ0MsU0FBUyxDQUFDdkIsRUFBRSxDQUFDO0VBQzdCO0FBQ0YsQ0FBQyxDQUFDO0FBRUZBLEVBQUUsQ0FBQ0MsU0FBUyxHQUFHQSxTQUFTO0FBQ3hCRCxFQUFFLENBQUNkLFNBQVMsR0FBR0EsU0FBUztBQUN4QmUsU0FBUyxDQUFDdUIsWUFBWSxFQUFFLENBQUNDLElBQUksQ0FBQ0MsQ0FBQyxJQUFFcEIsT0FBTyxDQUFDQyxHQUFHLENBQUMsdUJBQXVCLENBQUMsQ0FBQztBQUN0RSxlQUFlUCxFQUFFIn0=","map":{"version":3,"names":["fs","path","Sequelize","enVariables","fileURLToPath","__filename","import","meta","url","__dirname","dirname","basename","env","process","NODE_ENV","config","db","sequelize","use_env_variable","database","username","password","console","log","readdirSync","filter","file","indexOf","slice","forEach","model","require","join","default","DataTypes","name","Object","keys","modelName","associate","authenticate","then","_"],"sourceRoot":"C:\\Users\\Sosuke\\Desktop\\New folder\\server\\database\\model\\","sources":["index.cjs"],"sourcesContent":["import fs from 'fs';\r\nimport path from 'path';\r\nimport Sequelize from 'sequelize';\r\nimport enVariables from '../config/config.json';\r\n\r\nimport {fileURLToPath} from 'url';\r\nconst __filename = fileURLToPath(import.meta.url);\r\nconst __dirname = path.dirname(__filename);\r\n\r\nconst basename = path.basename(__filename);\r\nconst env = process.env.NODE_ENV || 'development';\r\nconst config = enVariables[env];\r\nconst db = {};\r\n\r\nlet sequelize;\r\nif (config.use_env_variable) {\r\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\r\n} else {\r\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\r\n}\r\nconsole.log(__dirname)\r\n\r\nfs\r\n  .readdirSync(__dirname)\r\n  .filter(file => (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js'))\r\n  .forEach(file => {\r\n    // eslint-disable-next-line global-require,import/no-dynamic-require\r\n    const model = require(path.join(__dirname, file)).default(sequelize, Sequelize.DataTypes);\r\n    db[model.name] = model;\r\n  });\r\n\r\nObject.keys(db).forEach(modelName => {\r\n  if (db[modelName].associate) {\r\n    db[modelName].associate(db);\r\n  }\r\n});\r\n\r\ndb.sequelize = sequelize;\r\ndb.Sequelize = Sequelize;\r\nsequelize.authenticate().then(_=>console.log('Connected to Postgres'))\r\nexport default db;"],"mappings":"AAAA,OAAOA,EAAE,MAAM,IAAI;AACnB,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,SAAS,MAAM,WAAW;AACjC,OAAOC,WAAW,MAAM,uBAAuB;AAE/C,SAAQC,aAAa,QAAO,KAAK;AACjC,MAAMC,UAAU,GAAGD,aAAa,CAACE,MAAM,CAACC,IAAI,CAACC,GAAG,CAAC;AACjD,MAAMC,SAAS,GAAGR,IAAI,CAACS,OAAO,CAACL,UAAU,CAAC;AAE1C,MAAMM,QAAQ,GAAGV,IAAI,CAACU,QAAQ,CAACN,UAAU,CAAC;AAC1C,MAAMO,GAAG,GAAGC,OAAO,CAACD,GAAG,CAACE,QAAQ,IAAI,aAAa;AACjD,MAAMC,MAAM,GAAGZ,WAAW,CAACS,GAAG,CAAC;AAC/B,MAAMI,EAAE,GAAG,CAAC,CAAC;AAEb,IAAIC,SAAS;AACb,IAAIF,MAAM,CAACG,gBAAgB,EAAE;EAC3BD,SAAS,GAAG,IAAIf,SAAS,CAACW,OAAO,CAACD,GAAG,CAACG,MAAM,CAACG,gBAAgB,CAAC,EAAEH,MAAM,CAAC;AACzE,CAAC,MAAM;EACLE,SAAS,GAAG,IAAIf,SAAS,CAACa,MAAM,CAACI,QAAQ,EAAEJ,MAAM,CAACK,QAAQ,EAAEL,MAAM,CAACM,QAAQ,EAAEN,MAAM,CAAC;AACtF;AACAO,OAAO,CAACC,GAAG,CAACd,SAAS,CAAC;AAEtBT,EAAE,CACCwB,WAAW,CAACf,SAAS,CAAC,CACtBgB,MAAM,CAACC,IAAI,IAAKA,IAAI,CAACC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAMD,IAAI,KAAKf,QAAS,IAAKe,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,KAAM,CAAC,CAC9FC,OAAO,CAACH,IAAI,IAAI;EACf;EACA,MAAMI,KAAK,GAAGC,OAAO,CAAC9B,IAAI,CAAC+B,IAAI,CAACvB,SAAS,EAAEiB,IAAI,CAAC,CAAC,CAACO,OAAO,CAAChB,SAAS,EAAEf,SAAS,CAACgC,SAAS,CAAC;EACzFlB,EAAE,CAACc,KAAK,CAACK,IAAI,CAAC,GAAGL,KAAK;AACxB,CAAC,CAAC;AAEJM,MAAM,CAACC,IAAI,CAACrB,EAAE,CAAC,CAACa,OAAO,CAACS,SAAS,IAAI;EACnC,IAAItB,EAAE,CAACsB,SAAS,CAAC,CAACC,SAAS,EAAE;IAC3BvB,EAAE,CAACsB,SAAS,CAAC,CAACC,SAAS,CAACvB,EAAE,CAAC;EAC7B;AACF,CAAC,CAAC;AAEFA,EAAE,CAACC,SAAS,GAAGA,SAAS;AACxBD,EAAE,CAACd,SAAS,GAAGA,SAAS;AACxBe,SAAS,CAACuB,YAAY,EAAE,CAACC,IAAI,CAACC,CAAC,IAAEpB,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC,CAAC;AACtE,eAAeP,EAAE"}},"mtime":1682176591697}}